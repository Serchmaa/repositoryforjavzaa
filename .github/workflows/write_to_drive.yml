name: Write to Google Drive

on:
  schedule:
    - cron: '*/1 * * * *'  # Every 30 minutes

jobs:
  write-to-drive:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client

    - name: Write to Google Drive
      env:
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        FILE_ID: ${{ secrets.FILE_ID }}
      run: |
        python -c "
import os
import time
from google.oauth2.credentials import Credentials
from googleapiclient.discovery import build

def write_to_file():
    creds = Credentials(
        None,
        refresh_token=os.getenv('REFRESH_TOKEN'),
        token_uri='https://oauth2.googleapis.com/token',
        client_id=os.getenv('CLIENT_ID'),
        client_secret=os.getenv('CLIENT_SECRET'),
    )
    drive_service = build('drive', 'v3', credentials=creds)
    file_id = os.getenv('FILE_ID')
    content = f'Text written at {time.ctime()}\n'
    file_metadata = {'name': 'your_file.txt'}
    
    # Check if the file exists
    results = drive_service.files().list(q=f'name="your_file.txt"', spaces='drive', fields='files(id, name)').execute()
    items = results.get('files', [])

    if not items:
        # Create a new file
        file = drive_service.files().create(body=file_metadata, fields='id').execute()
        file_id = file.get('id')
        drive_service.files().update(fileId=file_id, media_body=content).execute()
    else:
        # Append content to the existing file
        file_id = items[0]['id']
        drive_service.files().update(fileId=file_id, media_body=content).execute()

write_to_file()
"
